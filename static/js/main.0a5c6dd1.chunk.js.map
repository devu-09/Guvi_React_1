{"version":3,"sources":["Countercomponent.js","App.js","reportWebVitals.js","index.js"],"names":["Countercomponent","props","count","handleIncrement","setState","initialValue","state","temp","className","this","componentname","onClick","Component","App","console","log","componentName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAkCmBA,E,kDA7Bf,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAQVC,MAAQ,EATU,EAUlBC,gBAAkB,WAChB,EAAKC,SAAS,CAACC,aAAe,EAAKC,MAAMD,aAAe,IACxD,EAAKH,SAVL,EAAKI,MAAQ,CACXD,aAAe,EACfE,KAAO,GAJO,E,0CAelB,WAAS,IAAD,OACN,OACE,sBAAKC,UAAW,MAAhB,UACA,+BAAKC,KAAKR,MAAMS,cAAhB,gBACA,kDAAqBD,KAAKH,MAAMD,aAAhC,OACA,wBAAQG,UAAU,WAAWG,QAASF,KAAKN,gBAA3C,uBAHA,QAIA,wBAAQK,UAAU,WAAWG,QAAS,WAAM,EAAKP,SAAS,CAACC,aAAc,EAAKC,MAAMD,aAAe,IAAK,EAAKH,SAA7G,uBAJA,QAKA,wBAAQM,UAAU,WAAWG,QAAS,WAAM,EAAKP,SAAS,CAACC,aAAc,EAAKC,MAAMC,OAAO,EAAKL,MAAQ,GAAxG,0B,GAvBuBU,aCmBhBC,MAnBf,YAA8B,IAAhBH,EAAe,EAAfA,cAQZ,OAPAI,QAAQC,IAAIL,GASV,8BACE,cAAC,EAAD,CAAkBM,cAAgB,eCHzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKlB,cAAe,iBAEtBmB,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0a5c6dd1.chunk.js","sourcesContent":["import { render } from \"react-dom\";\r\nimport { Component } from \"react\";\r\nimport './App.css';\r\n\r\nclass Countercomponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n      this.state = {\r\n        initialValue : 5,\r\n        temp : 5, \r\n        \r\n      }\r\n    }\r\n    \r\n    count = 0;\r\n    handleIncrement = () => {\r\n      this.setState({initialValue : this.state.initialValue + 1});\r\n      this.count++;\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <div className =\"App\">\r\n        <h3>{this.props.componentname} Component</h3>\r\n        <h4>Initial Value : {this.state.initialValue} </h4>\r\n        <button className=\"App-link\" onClick={this.handleIncrement}>Increment</button> &nbsp;\r\n        <button className=\"App-link\" onClick={() =>{this.setState({initialValue: this.state.initialValue  -1}); this.count--}}>Decrement</button> &nbsp;\r\n        <button className=\"App-link\" onClick={() =>{this.setState({initialValue: this.state.temp});this.count = 0}}>Reset</button>\r\n        \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n    export default Countercomponent;","\nimport './App.css';\nimport Countercomponent from './Countercomponent';\n\nfunction App({componentname}){\n  console.log(componentname);\n\n  const sum = (a,b) =>{\n    return a+b;\n  }\n\n\n  return(\n\n    <div>\n      <Countercomponent componentName = \"counter\" />\n      </div>\n  )\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App componentname =\"Functional\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}